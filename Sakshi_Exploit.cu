/*
#ifndef __CUDACC__
#define __CUDACC__
#endif
#include "cuda_runtime.h"
#include "device_launch_parameters.h"

#include<stdio.h>
#include<conio.h>

__global__ void sessional(char *d_name[])
{
	printf("\n  %s",d_name);
	unsigned int t=threadIdx.x;

	char *alpha[26];
	char lol='d';

	for(int i=0;i<23;i++)
		alpha[i]=lol++;

	alpha[23]='a';
	alpha[24]='b';
	alpha[25]='c';

	for(int i=0; d_name[i]!='\0'; i++)
	{
		for(char j='a';j<='z';j++)
			if(&d_name[i]==j)
				d_name[i]=alpha[j];

		printf("%c",d_name[i]);

	}
	
}



int main()
{
	char *h_name="sakshi",*d_name[6];
	int length=0;



	for(int i=0;h_name[i]!='\0';i++)
		length++;
	
	int size = length*sizeof(char);

	cudaMalloc((void**)&h_name, size);

	cudaMemcpy(d_name,h_name, size, cudaMemcpyHostToDevice);

	sessional<<<1, length>>>(d_name);

	cudaMemcpy(h_name, d_name, size, cudaMemcpyDeviceToHost);

	printf("\n  %s",h_name);

	getch();

	return 0;
}*/