/*
#ifndef __CUDACC__
#define __CUDACC__
#endif
#include "cuda_runtime.h"
#include "device_launch_parameters.h"

#include<stdio.h>
#include "string.h"

__global__ void mofor(char* d_str,int len)
{
	for(int i=0;i<len;i++)
		if(d_str[i]=='A' ||d_str[i]=='E' ||d_str[i]=='I' ||d_str[i]=='O' ||d_str[i]=='U' ||d_str[i]=='a' ||d_str[i]=='e' ||d_str[i]=='i' ||d_str[i]=='o' ||d_str[i]=='u')
			d_str[i]='#';
}


__global__ void mofos(char *d_str, int len)
{
	int id=threadIdx.x;
	int temp;


	for(int i=1;i<=len;i++)
	{
		if(i&1)
		{

			if(d_str[id+1]>d_str[id+2])
			{
				temp=d_str[id+1];
				d_str[id+1]=d_str[id+2];
				d_str[id+2]=temp;
			}
			

		}
		else
		{
			if(d_str[id-1]>d_str[id])
			{
				temp=d_str[id-1];
				d_str[id-1]=d_str[id];
				d_str[id]=temp;
			}
		}


		if(!(i&1))
		{

			if(d_str[id+1]>d_str[id+2])
			{
				temp=d_str[id+1];
				d_str[id+1]=d_str[id+2];
				d_str[id+2]=temp;
			}


		}
		else
		{
			if(d_str[id-1]>d_str[id])
			{
				temp=d_str[id-1];
				d_str[id-1]=d_str[id];
				d_str[id]=temp;
			}

		}


	}


	
}





int main()
{
	char h_str[100];

	scanf("%s",h_str);

	 char *d_str;

	 int len=strlen(h_str);

	 //printf("%d",len);

	int size = len*sizeof(char);

	cudaMalloc((void **)&d_str,size);

	cudaMemcpy(d_str,h_str,size,cudaMemcpyHostToDevice);

	mofos<<<1,len>>>(d_str,len);

	cudaMemcpy(h_str,d_str,size,cudaMemcpyDeviceToHost);

	cudaMemcpy(d_str,h_str,size,cudaMemcpyHostToDevice);

	mofor<<<1,len>>>(d_str,len);

	cudaMemcpy(h_str,d_str,size,cudaMemcpyDeviceToHost);

	printf("%s",h_str);



}
*/